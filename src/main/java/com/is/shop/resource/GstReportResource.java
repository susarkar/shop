package com.is.shop.resource;

import com.is.shop.entity.GstReport;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.transaction.Transactional;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.UriBuilder;

import java.net.URI;
import java.util.List;

@Path("/api/gst-reports")
@Produces(MediaType.APPLICATION_JSON)
@Consumes(MediaType.APPLICATION_JSON)
@ApplicationScoped
public class GstReportResource {

    @GET
    public List<GstReport> listAll() {
        return GstReport.listAll();
    }

    @GET
    @Path("/{id}")
    public Response getById(@PathParam("id") Integer id) {
        return GstReport.<GstReport>findByIdOptional(id)
                .map(report -> Response.ok(report).build())
                .orElse(Response.status(Response.Status.NOT_FOUND).build());
    }

    @POST
    @Transactional
    public Response create(GstReport report) {
        // Usually, reports are generated by a service based on sales/purchases.
        // This POST might trigger that generation or allow manual creation.
        // For simplicity, we assume the report data is provided.
        if (report == null || report.id != null || report.periodStart == null || report.periodEnd == null) {
            return Response.status(Response.Status.BAD_REQUEST)
                    .entity("Report ID must be null, period required.")
                    .build();
        }

        // Add logic here to calculate totals if not provided in the request
        // report.totalSales = calculateTotalSales(report.periodStart, report.periodEnd);
        // ... etc ...

        report.persist();
        if (report.isPersistent()) {
            URI createdUri = UriBuilder.fromResource(GstReportResource.class)
                    .path(String.valueOf(report.id)).build();
            return Response.created(createdUri).entity(report).build();
        } else {
            return Response.status(Response.Status.INTERNAL_SERVER_ERROR)
                    .entity("Failed to persist GST report.")
                    .build();
        }
    }

    // PUT and DELETE are likely not applicable for generated reports.
    // You might have a DELETE for manually created/erroneous ones.
    @DELETE
    @Path("/{id}")
    @Transactional
    public Response delete(@PathParam("id") Integer id) {
        boolean deleted = GstReport.deleteById(id);
        if (deleted) {
            return Response.noContent().build();
        } else {
            return Response.status(Response.Status.NOT_FOUND).build();
        }
    }
}